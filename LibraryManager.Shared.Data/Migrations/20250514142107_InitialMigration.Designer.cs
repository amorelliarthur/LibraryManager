// <auto-generated />
using LibraryManager.Shared.Data.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManager.Shared.Data.Migrations
{
    [DbContext(typeof(LibraryManagerContext))]
    [Migration("20250514142107_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookReader", b =>
                {
                    b.Property<int>("BooksidBook")
                        .HasColumnType("int");

                    b.Property<int>("ReadersidReader")
                        .HasColumnType("int");

                    b.HasKey("BooksidBook", "ReadersidReader");

                    b.HasIndex("ReadersidReader");

                    b.ToTable("BookReader");
                });

            modelBuilder.Entity("Genre", b =>
                {
                    b.Property<int>("idGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idGenre"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idGenre");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("LibraryManager_Console.Book", b =>
                {
                    b.Property<int>("idBook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idBook"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreidGenre")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idBook");

                    b.HasIndex("GenreidGenre");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryManager_Console.Reader", b =>
                {
                    b.Property<int>("idReader")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idReader"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idReader");

                    b.ToTable("Readers");
                });

            modelBuilder.Entity("BookReader", b =>
                {
                    b.HasOne("LibraryManager_Console.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksidBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManager_Console.Reader", null)
                        .WithMany()
                        .HasForeignKey("ReadersidReader")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryManager_Console.Book", b =>
                {
                    b.HasOne("Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreidGenre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
